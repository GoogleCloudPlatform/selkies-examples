# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 3600s

substitutions:
  _USE_CACHE: "true"
  _APP_NAME: gzdoom
  _IMAGE_PREFIX: vdi
  _IMAGE_TAG: latest

tags:
  - gzdoom-images

###
# Images to be pushed
###
images: [
    'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:${_IMAGE_TAG}',
    'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:latest',
    'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:${_IMAGE_TAG}',
    'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:latest',
]

steps:
###
# GZdoom base image
###
- name: 'gcr.io/cloud-builders/docker'
  id: base-image-pull
  entrypoint: 'bash'
  args: ["-c", "if [[ '${_USE_CACHE}' == 'true' ]]; then (docker pull gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:latest || exit 0); fi"]
  waitFor: ["-"]
- name: 'gcr.io/cloud-builders/docker'
  id: base-image
  args: [
            'build',
            '-t', 'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:${_IMAGE_TAG}',
            '--cache-from', 'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:latest',
            '--build-arg', 'BASE_IMAGE=gcr.io/${PROJECT_ID}/webrtc-gpu-streaming-app-streaming:focal',
            '${_APP_NAME}-base'
        ]
  waitFor:
    - base-image-pull
- name: 'gcr.io/cloud-builders/docker'
  id: base-image-tags
  args: [
            'tag',
            'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:${_IMAGE_TAG}',
            'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:latest',
        ]
  waitFor:
    - base-image

###
# Brutal Doom MOD image
###
- name: 'gcr.io/cloud-builders/docker'
  id: brutal-doom-image-pull
  entrypoint: 'bash'
  args: ["-c", "if [[ '${_USE_CACHE}' == 'true' ]]; then (docker pull gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:latest || exit 0); fi"]
  waitFor: ["-"]
- name: 'gcr.io/cloud-builders/docker'
  id: brutal-doom-image
  args: [
            'build',
            '-t', 'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:${_IMAGE_TAG}',
            '--cache-from', 'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:latest',
            '--build-arg', 'BASE_IMAGE=gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-base:${_IMAGE_TAG}',
            'brutal-doom'
        ]
  waitFor:
    - brutal-doom-image-pull
- name: 'gcr.io/cloud-builders/docker'
  id: brutal-doom-image-tags
  args: [
            'tag',
            'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:${_IMAGE_TAG}',
            'gcr.io/${PROJECT_ID}/${_IMAGE_PREFIX}-${_APP_NAME}-brutal-doom:latest',
        ]
  waitFor:
    - brutal-doom-image