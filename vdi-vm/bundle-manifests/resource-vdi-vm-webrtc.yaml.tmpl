# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if eq .AppParams.instanceOS "linux"}}

apiVersion: v1
kind: Service
metadata:
  name: vm
spec:
  selector:
    app: vm
  ports:
    # Port 80 is the default port routed by the pod broker.
    - port: 80
      name: web
      targetPort: 8082
    - port: 8080
      name: signalling
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vm
spec:
  selector:
    matchLabels:
      app: vm
  serviceName: vm
  replicas: 1
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: vm
    spec:
      # Disable service account used for accessing the kubernetes API/
      automountServiceAccountToken: false

      # Terminate pod after 10 seconds of receiving SIGTERM
      terminationGracePeriodSeconds: 5
      volumes:
        ###
        # NVIDIA bins and libs from host
        ###
        - name: nvidia
          hostPath:
            path: /home/kubernetes/bin/nvidia
        ###
        # shared x11 socket volume
        ###
        - name: x11
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
        ###
        # Shared config volume
        ###
        - name: config
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
        ###
        # shared memory mount
        # used to bypass default container runtime of 64MB
        ###
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
      containers:
        ###
        # NOTE: To speed up container startup time, images are pulled locally in the gpu-node-init daemonset, hence the imagePullPolicy=Never
        ###

        ###
        # web container
        ###
        - name: web
          image: gcr.io/cloud-solutions-images/webrtc-gpu-streaming-gst-web:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
            - -exc
            - |
              sed -i \
                  -e 's/listen.*80;/listen 8082;/g' \
                  /etc/nginx/conf.d/default.conf

              exec nginx -g 'daemon off;'
          ports:
            - name: web
              containerPort: 8082
          readinessProbe:
            httpGet:
              path: /
              port: web
          resources:
            requests:
              cpu: 100m

        ###
        # signalling container
        ###
        - name: signalling
          image: gcr.io/cloud-solutions-images/webrtc-gpu-streaming-signaling:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: signalling
              containerPort: 8080
          readinessProbe:
            tcpSocket:
              port: signalling
          resources:
            requests:
              cpu: 100m
{{- end}}